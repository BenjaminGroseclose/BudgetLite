@using BudgetLite.Web.Authentication

@inject AuthenticationStateProvider authenticationStateProvider;
@inject NavigationManager navigationManager;

<AuthorizeView>
    <Authorized>
        <MudMenu ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
            <ActivatorContent>
                <MudAvatar Color="Color.Secondary" Class="mr-3">@context.User.Identity?.Name?.Substring(0,1).ToUpper()</MudAvatar>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem Href="profile">Profile</MudMenuItem>
                <MudMenuItem Color="Color.Inherit" OnClick="Logout">Logout</MudMenuItem>
            </ChildContent>
        </MudMenu>
    </Authorized>
    <NotAuthorized>
        <MudButton Class="mr-3" Variant="Variant.Text" StartIcon="@Icons.Filled.Login" Color="Color.Inherit" Href="login">Login</MudButton>
        <MudButton Variant="Variant.Text" StartIcon="@Icons.Filled.PersonAdd" Color="Color.Inherit" Href="signup">Sign Up</MudButton>
    </NotAuthorized>
</AuthorizeView>


@code {

    public async Task Logout()
    {
        var customAuthenticationStateProvider = (CustomAuthenticationStateProvider)this.authenticationStateProvider;
        await customAuthenticationStateProvider.UpdateAuthenticationState(null);
        navigationManager.NavigateTo("/", forceLoad: true);
    }

}
