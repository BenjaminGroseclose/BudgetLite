@page "/budgets"
@attribute [Authorize]

@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject IRepository<Budget> BudgetRepository

<AddEditBudget Budget="null" ReloadBudgetList="Reload" />

@foreach (var budget in currentBudgets)
{
    <BudgetListItem Budget="budget" />
}


<!-- List Active Budgets in last modified date order (future allow option to customize) -->

@code {
    bool loading = false;
    int userID = 0;
    IEnumerable<Budget> currentBudgets = new List<Budget>();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var currentUser = authState.User;

        userID = int.Parse(currentUser.Claims.First(x => x.Type == ClaimTypes.NameIdentifier).Value);

        currentBudgets = this.BudgetRepository.GetAll().Where(x => x.UserID == userID);

        await base.OnInitializedAsync();
    }

    public void Reload()
    {
        currentBudgets = this.BudgetRepository.GetAll().Where(x => x.UserID == userID);
        this.StateHasChanged();
    }
}
